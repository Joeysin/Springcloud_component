version: "3"

services:
#SpringCloud config server
#      config:
#        build: ./microservice-config-service
#        networks:
#            - mybridge
#        links:
#           - eureka
#           - rabbitmq
#        hostname: config
#        image: config
#        container_name: config

#携程阿波罗配置中心
#      apollo-config-server:
#        image: nobodyiam/apollo-quick-start
#        container_name: apollo-quick-start
#        depends_on:
#          - apollo-db
#        ports:
#          - "8080:8080"
#          - "8070:8070"
#        links:
#          - apollo-db
#
#      apollo-db:
#        image: mysql:5.7
#        container_name: apollo-db
#        environment:
#          TZ: Asia/Shanghai
#          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
#        depends_on:
#          - apollo-dbdata
#        ports:
#          - "13306:3306"
#        volumes:
#          - ./sql:/docker-entrypoint-initdb.d
#        volumes_from:
#          - apollo-dbdata
#
#      apollo-dbdata:
#        image: alpine:latest
#        container_name: apollo-dbdata
#        volumes:
#          - /var/lib/mysql

      apollo-client:
        build: ./microservice-apollo-client
        networks:
           - mybridge
        links:
           - eureka
           - mysql:zuul_oauth2
           - apollo-config-server
        hostname: apollo-client
        image: apollo-client
        container_name: apollo-client

#      eureka:
#        build: ./microservice-discovery-eureka-service
#        networks:
#           - mybridge
#        ports:
#           - "8761:8761"
#        hostname: eureka
#        image: eureka
#        container_name: eureka

#      oauth2:
#        build: ./microservice-oauth2-service
#        networks:
#          - mybridge
#        links:
#          - eureka
#          - mysql:zuul_oauth2
#          - redis
##         - config
#        hostname: oauth2
#        image: oauth2
#        container_name: oauth2
#
#      zuul:
#        build: ./microservice-zuul-gateway-service
#        networks:
#          - mybridge
#        links:
#          - eureka
#        ports:
#          - "8080:8080"
#        hostname: zuul
#        image: zuul
#        container_name: zuul
#
#      order:
#        build: ./microservice-order-service
#        networks:
#          - mybridge
#        links:
#          - eureka
#          - rabbitmq
##         - config
##         - zuul
#        hostname: order
#        image: order
#        container_name: order  定义后无法使用<scale>水平扩展

#zipkin-module
#      zipkin-server:
#        build: ./microservice-sleuth-zipkin-service
#        networks:
#          - mybridge
#        links:
#          - eureka
#          - mysql:zipkin
#          - rabbitmq
#        ports:
#          - "9411:9411"
#        hostname: zipkin-server
#        image: zipkin-server
#        container_name: zipkin-server
#
#      zipkin-consumer:
#        build: ./microservice-order-service-with-sleuthZipkin
#        networks:
#          - mybridge
#        links:
#          - eureka
#          - rabbitmq
#        ports:
#          - "8085:8085"
#        hostname: zipkin-consumer
#        image: zipkin-consumer
#        container_name: zipkin-consumer
#
#      zipkin-provider:
#        build: ./microservice-order-service-with-sleuthZipkin-backup
#        networks:
#          - mybridge
#        links:
#          - eureka
#          - rabbitmq
#        hostname:  zipkin-provider
#        image:  zipkin-provider
#        container_name:  zipkin-provider

      #数据持久化====================================
#      redis:
#        image: redis
#        networks:
#          - mybridge
#        expose:
#          - 6379
#        volumes:
#          - "redis-data:/data"
#        container_name: redis
#        hostname: redis
#
#      mysql:
#        image: mysql:5.6
#        restart: always
#        container_name: mysql
#        networks:
#          - mybridge
##        privileged: true
#        volumes:
#          - ./sql:/docker-entrypoint-initdb.d
#        environment:
#          MYSQL_ROOT_PASSWORD: 111111
#        hostname: mysql
#
#      rabbitmq:
#        image: rabbitmq:3.6-management
#        networks:
#          - mybridge
#        container_name: rabbitmq
#        volumes:
#          - "rabbitmq-data:/var/lib/rabbitmq/"
#        ports:
#          - "15672:15672"
#        hostname: rabbitmq




volumes:
  redis-data:
  mysql-data:
  rabbitmq-data:

networks:
  mybridge:





